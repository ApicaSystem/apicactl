// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.5
// source: api/proto/federation.proto

package federation

import (
	context "context"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetadataType int32

const (
	MetadataType_DataMap      MetadataType = 0
	MetadataType_TextMap      MetadataType = 1
	MetadataType_AttributeMap MetadataType = 2
)

// Enum value maps for MetadataType.
var (
	MetadataType_name = map[int32]string{
		0: "DataMap",
		1: "TextMap",
		2: "AttributeMap",
	}
	MetadataType_value = map[string]int32{
		"DataMap":      0,
		"TextMap":      1,
		"AttributeMap": 2,
	}
)

func (x MetadataType) Enum() *MetadataType {
	p := new(MetadataType)
	*p = x
	return p
}

func (x MetadataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_federation_proto_enumTypes[0].Descriptor()
}

func (MetadataType) Type() protoreflect.EnumType {
	return &file_api_proto_federation_proto_enumTypes[0]
}

func (x MetadataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataType.Descriptor instead.
func (MetadataType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{0}
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Filter) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{1}
}

func (x *Pong) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetLocalMetadataItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataType MetadataType `protobuf:"varint,1,opt,name=metadataType,proto3,enum=federation.MetadataType" json:"metadataType,omitempty"`
	Destination  string       `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Namespace    string       `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Keys         []string     `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Val          string       `protobuf:"bytes,5,opt,name=val,proto3" json:"val,omitempty"`
	Interval     int64        `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Stems        []string     `protobuf:"bytes,7,rep,name=stems,proto3" json:"stems,omitempty"`
	ActualStems  []string     `protobuf:"bytes,8,rep,name=actualStems,proto3" json:"actualStems,omitempty"`
}

func (x *GetLocalMetadataItemRequest) Reset() {
	*x = GetLocalMetadataItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocalMetadataItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocalMetadataItemRequest) ProtoMessage() {}

func (x *GetLocalMetadataItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocalMetadataItemRequest.ProtoReflect.Descriptor instead.
func (*GetLocalMetadataItemRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{2}
}

func (x *GetLocalMetadataItemRequest) GetMetadataType() MetadataType {
	if x != nil {
		return x.MetadataType
	}
	return MetadataType_DataMap
}

func (x *GetLocalMetadataItemRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *GetLocalMetadataItemRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetLocalMetadataItemRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GetLocalMetadataItemRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *GetLocalMetadataItemRequest) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *GetLocalMetadataItemRequest) GetStems() []string {
	if x != nil {
		return x.Stems
	}
	return nil
}

func (x *GetLocalMetadataItemRequest) GetActualStems() []string {
	if x != nil {
		return x.ActualStems
	}
	return nil
}

type LocalMetadataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataType  MetadataType `protobuf:"varint,1,opt,name=metadataType,proto3,enum=federation.MetadataType" json:"metadataType,omitempty"`
	Destination   string       `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Namespace     string       `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key           string       `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Val           string       `protobuf:"bytes,5,opt,name=val,proto3" json:"val,omitempty"`
	LogStartTime  int64        `protobuf:"varint,6,opt,name=logStartTime,proto3" json:"logStartTime,omitempty"`
	DataLocations []string     `protobuf:"bytes,7,rep,name=dataLocations,proto3" json:"dataLocations,omitempty"`
	Stems         []string     `protobuf:"bytes,8,rep,name=stems,proto3" json:"stems,omitempty"`
}

func (x *LocalMetadataItem) Reset() {
	*x = LocalMetadataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalMetadataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalMetadataItem) ProtoMessage() {}

func (x *LocalMetadataItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalMetadataItem.ProtoReflect.Descriptor instead.
func (*LocalMetadataItem) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{3}
}

func (x *LocalMetadataItem) GetMetadataType() MetadataType {
	if x != nil {
		return x.MetadataType
	}
	return MetadataType_DataMap
}

func (x *LocalMetadataItem) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *LocalMetadataItem) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LocalMetadataItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LocalMetadataItem) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *LocalMetadataItem) GetLogStartTime() int64 {
	if x != nil {
		return x.LogStartTime
	}
	return 0
}

func (x *LocalMetadataItem) GetDataLocations() []string {
	if x != nil {
		return x.DataLocations
	}
	return nil
}

func (x *LocalMetadataItem) GetStems() []string {
	if x != nil {
		return x.Stems
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Destination      string   `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Namespace        string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ApplicationNames []string `protobuf:"bytes,4,rep,name=applicationNames,proto3" json:"applicationNames,omitempty"`
	OriginStartTime  string   `protobuf:"bytes,5,opt,name=originStartTime,proto3" json:"originStartTime,omitempty"`
	KeyWord          string   `protobuf:"bytes,6,opt,name=keyWord,proto3" json:"keyWord,omitempty"`
	Filters          string   `protobuf:"bytes,7,opt,name=filters,proto3" json:"filters,omitempty"`
	StartTime        int64    `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime          int64    `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ActualStems      []string `protobuf:"bytes,10,rep,name=actualStems,proto3" json:"actualStems,omitempty"`
	IntentID         string   `protobuf:"bytes,11,opt,name=intentID,proto3" json:"intentID,omitempty"`
	ActualStemsV3    []string `protobuf:"bytes,12,rep,name=actualStemsV3,proto3" json:"actualStemsV3,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *QueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *QueryRequest) GetApplicationNames() []string {
	if x != nil {
		return x.ApplicationNames
	}
	return nil
}

func (x *QueryRequest) GetOriginStartTime() string {
	if x != nil {
		return x.OriginStartTime
	}
	return ""
}

func (x *QueryRequest) GetKeyWord() string {
	if x != nil {
		return x.KeyWord
	}
	return ""
}

func (x *QueryRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *QueryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryRequest) GetActualStems() []string {
	if x != nil {
		return x.ActualStems
	}
	return nil
}

func (x *QueryRequest) GetIntentID() string {
	if x != nil {
		return x.IntentID
	}
	return ""
}

func (x *QueryRequest) GetActualStemsV3() []string {
	if x != nil {
		return x.ActualStemsV3
	}
	return nil
}

type GetRemoteMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId               string        `protobuf:"bytes,1,opt,name=queryId,proto3" json:"queryId,omitempty"`
	Destination           string        `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Namespace             string        `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key                   string        `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	LogStartTime          int64         `protobuf:"varint,5,opt,name=logStartTime,proto3" json:"logStartTime,omitempty"`
	ActualStems           []string      `protobuf:"bytes,6,rep,name=actualStems,proto3" json:"actualStems,omitempty"`
	CompareStems          bool          `protobuf:"varint,7,opt,name=compareStems,proto3" json:"compareStems,omitempty"`
	DailyBitsetFileName   string        `protobuf:"bytes,9,opt,name=dailyBitsetFileName,proto3" json:"dailyBitsetFileName,omitempty"`
	GetFromCache          bool          `protobuf:"varint,10,opt,name=getFromCache,proto3" json:"getFromCache,omitempty"`
	IndexIntervalFileName string        `protobuf:"bytes,11,opt,name=indexIntervalFileName,proto3" json:"indexIntervalFileName,omitempty"`
	QueryRequest          *QueryRequest `protobuf:"bytes,12,opt,name=queryRequest,proto3" json:"queryRequest,omitempty"`
}

func (x *GetRemoteMetadataRequest) Reset() {
	*x = GetRemoteMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemoteMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteMetadataRequest) ProtoMessage() {}

func (x *GetRemoteMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetRemoteMetadataRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{5}
}

func (x *GetRemoteMetadataRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetLogStartTime() int64 {
	if x != nil {
		return x.LogStartTime
	}
	return 0
}

func (x *GetRemoteMetadataRequest) GetActualStems() []string {
	if x != nil {
		return x.ActualStems
	}
	return nil
}

func (x *GetRemoteMetadataRequest) GetCompareStems() bool {
	if x != nil {
		return x.CompareStems
	}
	return false
}

func (x *GetRemoteMetadataRequest) GetDailyBitsetFileName() string {
	if x != nil {
		return x.DailyBitsetFileName
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetGetFromCache() bool {
	if x != nil {
		return x.GetFromCache
	}
	return false
}

func (x *GetRemoteMetadataRequest) GetIndexIntervalFileName() string {
	if x != nil {
		return x.IndexIntervalFileName
	}
	return ""
}

func (x *GetRemoteMetadataRequest) GetQueryRequest() *QueryRequest {
	if x != nil {
		return x.QueryRequest
	}
	return nil
}

type StreamRemoteMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogStartTime int64    `protobuf:"varint,1,opt,name=logStartTime,proto3" json:"logStartTime,omitempty"`
	DataLocation []string `protobuf:"bytes,2,rep,name=dataLocation,proto3" json:"dataLocation,omitempty"`
}

func (x *StreamRemoteMetadataResponse) Reset() {
	*x = StreamRemoteMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRemoteMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRemoteMetadataResponse) ProtoMessage() {}

func (x *StreamRemoteMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRemoteMetadataResponse.ProtoReflect.Descriptor instead.
func (*StreamRemoteMetadataResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{6}
}

func (x *StreamRemoteMetadataResponse) GetLogStartTime() int64 {
	if x != nil {
		return x.LogStartTime
	}
	return 0
}

func (x *StreamRemoteMetadataResponse) GetDataLocation() []string {
	if x != nil {
		return x.DataLocation
	}
	return nil
}

//S3MetaDataDump
type S3MetaDataDump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intervals    map[string]*LocalMetadataItems `protobuf:"bytes,1,rep,name=Intervals,proto3" json:"Intervals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Destination  string                         `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Namespace    string                         `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key          string                         `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Val          string                         `protobuf:"bytes,5,opt,name=val,proto3" json:"val,omitempty"`
	MetadataType MetadataType                   `protobuf:"varint,6,opt,name=metadataType,proto3,enum=federation.MetadataType" json:"metadataType,omitempty"`
	Year         int64                          `protobuf:"varint,7,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *S3MetaDataDump) Reset() {
	*x = S3MetaDataDump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3MetaDataDump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3MetaDataDump) ProtoMessage() {}

func (x *S3MetaDataDump) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3MetaDataDump.ProtoReflect.Descriptor instead.
func (*S3MetaDataDump) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{7}
}

func (x *S3MetaDataDump) GetIntervals() map[string]*LocalMetadataItems {
	if x != nil {
		return x.Intervals
	}
	return nil
}

func (x *S3MetaDataDump) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *S3MetaDataDump) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *S3MetaDataDump) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *S3MetaDataDump) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *S3MetaDataDump) GetMetadataType() MetadataType {
	if x != nil {
		return x.MetadataType
	}
	return MetadataType_DataMap
}

func (x *S3MetaDataDump) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type LocalMetadataItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LocalMetadataItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LocalMetadataItems) Reset() {
	*x = LocalMetadataItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalMetadataItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalMetadataItems) ProtoMessage() {}

func (x *LocalMetadataItems) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalMetadataItems.ProtoReflect.Descriptor instead.
func (*LocalMetadataItems) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{8}
}

func (x *LocalMetadataItems) GetItems() []*LocalMetadataItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetLocalMetadataItemRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         *LocalMetadataItems `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	SkipIntervals []int64             `protobuf:"varint,2,rep,packed,name=skipIntervals,proto3" json:"skipIntervals,omitempty"`
}

func (x *GetLocalMetadataItemRequestResponse) Reset() {
	*x = GetLocalMetadataItemRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocalMetadataItemRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocalMetadataItemRequestResponse) ProtoMessage() {}

func (x *GetLocalMetadataItemRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocalMetadataItemRequestResponse.ProtoReflect.Descriptor instead.
func (*GetLocalMetadataItemRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{9}
}

func (x *GetLocalMetadataItemRequestResponse) GetItems() *LocalMetadataItems {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetLocalMetadataItemRequestResponse) GetSkipIntervals() []int64 {
	if x != nil {
		return x.SkipIntervals
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{10}
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetFederationsResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nodes []*Node `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GetFederationsResponseEntry) Reset() {
	*x = GetFederationsResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFederationsResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFederationsResponseEntry) ProtoMessage() {}

func (x *GetFederationsResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFederationsResponseEntry.ProtoReflect.Descriptor instead.
func (*GetFederationsResponseEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{11}
}

func (x *GetFederationsResponseEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFederationsResponseEntry) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GetFederationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*GetFederationsResponseEntry `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetFederationsResponse) Reset() {
	*x = GetFederationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFederationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFederationsResponse) ProtoMessage() {}

func (x *GetFederationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFederationsResponse.ProtoReflect.Descriptor instead.
func (*GetFederationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{12}
}

func (x *GetFederationsResponse) GetResults() []*GetFederationsResponseEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

type PostFederationObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       // What object type is being requested
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // Name of the federation
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"` // Which address to query in the federation
}

func (x *PostFederationObjectsRequest) Reset() {
	*x = PostFederationObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationObjectsRequest) ProtoMessage() {}

func (x *PostFederationObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationObjectsRequest.ProtoReflect.Descriptor instead.
func (*PostFederationObjectsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{13}
}

func (x *PostFederationObjectsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PostFederationObjectsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostFederationObjectsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type PostFederationObjectsResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjectPath string `protobuf:"bytes,2,opt,name=object_path,json=objectPath,proto3" json:"object_path,omitempty"`
	Dirty      int32  `protobuf:"varint,3,opt,name=dirty,proto3" json:"dirty,omitempty"`
	UpdatedAt  string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PostFederationObjectsResponseEntry) Reset() {
	*x = PostFederationObjectsResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationObjectsResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationObjectsResponseEntry) ProtoMessage() {}

func (x *PostFederationObjectsResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationObjectsResponseEntry.ProtoReflect.Descriptor instead.
func (*PostFederationObjectsResponseEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{14}
}

func (x *PostFederationObjectsResponseEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostFederationObjectsResponseEntry) GetObjectPath() string {
	if x != nil {
		return x.ObjectPath
	}
	return ""
}

func (x *PostFederationObjectsResponseEntry) GetDirty() int32 {
	if x != nil {
		return x.Dirty
	}
	return 0
}

func (x *PostFederationObjectsResponseEntry) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PostFederationObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PostFederationObjectsResponseEntry `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PostFederationObjectsResponse) Reset() {
	*x = PostFederationObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationObjectsResponse) ProtoMessage() {}

func (x *PostFederationObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationObjectsResponse.ProtoReflect.Descriptor instead.
func (*PostFederationObjectsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{15}
}

func (x *PostFederationObjectsResponse) GetResults() []*PostFederationObjectsResponseEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

type PostFederationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the federation
}

func (x *PostFederationStatusRequest) Reset() {
	*x = PostFederationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationStatusRequest) ProtoMessage() {}

func (x *PostFederationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationStatusRequest.ProtoReflect.Descriptor instead.
func (*PostFederationStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{16}
}

func (x *PostFederationStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PostFederationStatusResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StatusCode int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PostFederationStatusResponseEntry) Reset() {
	*x = PostFederationStatusResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationStatusResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationStatusResponseEntry) ProtoMessage() {}

func (x *PostFederationStatusResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationStatusResponseEntry.ProtoReflect.Descriptor instead.
func (*PostFederationStatusResponseEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{17}
}

func (x *PostFederationStatusResponseEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PostFederationStatusResponseEntry) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PostFederationStatusResponseEntry) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PostFederationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PostFederationStatusResponseEntry `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PostFederationStatusResponse) Reset() {
	*x = PostFederationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFederationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFederationStatusResponse) ProtoMessage() {}

func (x *PostFederationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFederationStatusResponse.ProtoReflect.Descriptor instead.
func (*PostFederationStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{18}
}

func (x *PostFederationStatusResponse) GetResults() []*PostFederationStatusResponseEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

type StreamLocalFileRequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StreamLocalFileRequestFilter) Reset() {
	*x = StreamLocalFileRequestFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLocalFileRequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLocalFileRequestFilter) ProtoMessage() {}

func (x *StreamLocalFileRequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLocalFileRequestFilter.ProtoReflect.Descriptor instead.
func (*StreamLocalFileRequestFilter) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{19}
}

func (x *StreamLocalFileRequestFilter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type StreamLocalFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string                                   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Params   map[string]*StreamLocalFileRequestFilter `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	QueryId  string                                   `protobuf:"bytes,3,opt,name=queryId,proto3" json:"queryId,omitempty"`
}

func (x *StreamLocalFileRequest) Reset() {
	*x = StreamLocalFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLocalFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLocalFileRequest) ProtoMessage() {}

func (x *StreamLocalFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLocalFileRequest.ProtoReflect.Descriptor instead.
func (*StreamLocalFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{20}
}

func (x *StreamLocalFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *StreamLocalFileRequest) GetParams() map[string]*StreamLocalFileRequestFilter {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *StreamLocalFileRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

type ReportDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId        string   `protobuf:"bytes,1,opt,name=queryId,proto3" json:"queryId,omitempty"`
	Namespace      string   `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Application    string   `protobuf:"bytes,3,opt,name=Application,proto3" json:"Application,omitempty"`
	Expression     string   `protobuf:"bytes,4,opt,name=Expression,proto3" json:"Expression,omitempty"`
	ValueField     string   `protobuf:"bytes,5,opt,name=ValueField,proto3" json:"ValueField,omitempty"`
	AggregateFn    string   `protobuf:"bytes,6,opt,name=AggregateFn,proto3" json:"AggregateFn,omitempty"`
	GroupBy        []string `protobuf:"bytes,7,rep,name=GroupBy,proto3" json:"GroupBy,omitempty"`
	GroupByPattern []string `protobuf:"bytes,8,rep,name=GroupByPattern,proto3" json:"GroupByPattern,omitempty"`
	StartTime      int64    `protobuf:"varint,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime        int64    `protobuf:"varint,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Step           string   `protobuf:"bytes,11,opt,name=Step,proto3" json:"Step,omitempty"`
	TimestampField string   `protobuf:"bytes,12,opt,name=TimestampField,proto3" json:"TimestampField,omitempty"`
	AllowEmpty     bool     `protobuf:"varint,13,opt,name=AllowEmpty,proto3" json:"AllowEmpty,omitempty"`
}

func (x *ReportDefinition) Reset() {
	*x = ReportDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDefinition) ProtoMessage() {}

func (x *ReportDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDefinition.ProtoReflect.Descriptor instead.
func (*ReportDefinition) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{21}
}

func (x *ReportDefinition) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *ReportDefinition) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReportDefinition) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *ReportDefinition) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ReportDefinition) GetValueField() string {
	if x != nil {
		return x.ValueField
	}
	return ""
}

func (x *ReportDefinition) GetAggregateFn() string {
	if x != nil {
		return x.AggregateFn
	}
	return ""
}

func (x *ReportDefinition) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *ReportDefinition) GetGroupByPattern() []string {
	if x != nil {
		return x.GroupByPattern
	}
	return nil
}

func (x *ReportDefinition) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReportDefinition) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReportDefinition) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *ReportDefinition) GetTimestampField() string {
	if x != nil {
		return x.TimestampField
	}
	return ""
}

func (x *ReportDefinition) GetAllowEmpty() bool {
	if x != nil {
		return x.AllowEmpty
	}
	return false
}

type StreamReportResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string                                   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Params   map[string]*StreamLocalFileRequestFilter `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	QueryId  string                                   `protobuf:"bytes,3,opt,name=queryId,proto3" json:"queryId,omitempty"`
	Rd       *ReportDefinition                        `protobuf:"bytes,4,opt,name=rd,proto3" json:"rd,omitempty"`
	IntentID string                                   `protobuf:"bytes,11,opt,name=intentID,proto3" json:"intentID,omitempty"`
}

func (x *StreamReportResultsRequest) Reset() {
	*x = StreamReportResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReportResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReportResultsRequest) ProtoMessage() {}

func (x *StreamReportResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReportResultsRequest.ProtoReflect.Descriptor instead.
func (*StreamReportResultsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{22}
}

func (x *StreamReportResultsRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *StreamReportResultsRequest) GetParams() map[string]*StreamLocalFileRequestFilter {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *StreamReportResultsRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *StreamReportResultsRequest) GetRd() *ReportDefinition {
	if x != nil {
		return x.Rd
	}
	return nil
}

func (x *StreamReportResultsRequest) GetIntentID() string {
	if x != nil {
		return x.IntentID
	}
	return ""
}

type StreamDataFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []string `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *StreamDataFileResponse) Reset() {
	*x = StreamDataFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDataFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataFileResponse) ProtoMessage() {}

func (x *StreamDataFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataFileResponse.ProtoReflect.Descriptor instead.
func (*StreamDataFileResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{23}
}

func (x *StreamDataFileResponse) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type ReplayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileName           string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Expression         string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	StartTime          string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime            string `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ForwardDestination string `protobuf:"bytes,6,opt,name=forwardDestination,proto3" json:"forwardDestination,omitempty"`
}

func (x *ReplayRequest) Reset() {
	*x = ReplayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest) ProtoMessage() {}

func (x *ReplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest.ProtoReflect.Descriptor instead.
func (*ReplayRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{24}
}

func (x *ReplayRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplayRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ReplayRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ReplayRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ReplayRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ReplayRequest) GetForwardDestination() string {
	if x != nil {
		return x.ForwardDestination
	}
	return ""
}

type ReplyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines int64 `protobuf:"varint,1,opt,name=lines,proto3" json:"lines,omitempty"`
	Bytes int64 `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ReplyStats) Reset() {
	*x = ReplyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_federation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyStats) ProtoMessage() {}

func (x *ReplyStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_federation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyStats.ProtoReflect.Descriptor instead.
func (*ReplyStats) Descriptor() ([]byte, []int) {
	return file_api_proto_federation_proto_rawDescGZIP(), []int{25}
}

func (x *ReplyStats) GetLines() int64 {
	if x != nil {
		return x.Lines
	}
	return 0
}

func (x *ReplyStats) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

var File_api_proto_federation_proto protoreflect.FileDescriptor

var file_api_proto_federation_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a,
	0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x95, 0x02, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x95, 0x02, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x56, 0x33, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x56, 0x33,
	0x22, 0xba, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x53, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x53, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x69, 0x74, 0x73,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x69, 0x74, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67, 0x65, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a,
	0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xed, 0x02, 0x0a, 0x0e, 0x53, 0x33, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x47, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x33, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x75, 0x6d, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x1a, 0x5c, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x81, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x60,
	0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x8a, 0x01, 0x0a, 0x22, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x72, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x69, 0x72, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x69, 0x0a,
	0x1d, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74,
	0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x21, 0x50,
	0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x67, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x1c, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x63, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa4, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x74, 0x65, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xcd, 0x02, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x02, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x02, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x1a, 0x63, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a,
	0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2a, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x61, 0x70, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x10, 0x02, 0x32, 0xaf, 0x08, 0x0a, 0x0a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x10, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x27, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x19, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x0f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x22, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x13, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x90, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x92, 0x41, 0x29, 0x0a, 0x0a, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb5, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x28, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x23, 0x0a, 0x0a, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x47, 0x65, 0x74, 0x20, 0x61, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0xb6, 0x01,
	0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x28, 0x0a, 0x0a,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x47, 0x65, 0x74, 0x20,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x19, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x22, 0x00, 0x42, 0xe2, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x71, 0x61, 0x69, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x71, 0x63, 0x74, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x92, 0x41, 0xa4, 0x01, 0x12, 0x11, 0x0a, 0x0a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x52, 0x19, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x17, 0x0a, 0x03,
	0x34, 0x30, 0x33, 0x12, 0x10, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x2e, 0x52, 0x33, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x2c, 0x0a, 0x2a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20,
	0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_federation_proto_rawDescOnce sync.Once
	file_api_proto_federation_proto_rawDescData = file_api_proto_federation_proto_rawDesc
)

func file_api_proto_federation_proto_rawDescGZIP() []byte {
	file_api_proto_federation_proto_rawDescOnce.Do(func() {
		file_api_proto_federation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_federation_proto_rawDescData)
	})
	return file_api_proto_federation_proto_rawDescData
}

var file_api_proto_federation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_federation_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_api_proto_federation_proto_goTypes = []interface{}{
	(MetadataType)(0),                           // 0: federation.MetadataType
	(*Filter)(nil),                              // 1: federation.Filter
	(*Pong)(nil),                                // 2: federation.Pong
	(*GetLocalMetadataItemRequest)(nil),         // 3: federation.GetLocalMetadataItemRequest
	(*LocalMetadataItem)(nil),                   // 4: federation.LocalMetadataItem
	(*QueryRequest)(nil),                        // 5: federation.QueryRequest
	(*GetRemoteMetadataRequest)(nil),            // 6: federation.GetRemoteMetadataRequest
	(*StreamRemoteMetadataResponse)(nil),        // 7: federation.StreamRemoteMetadataResponse
	(*S3MetaDataDump)(nil),                      // 8: federation.S3MetaDataDump
	(*LocalMetadataItems)(nil),                  // 9: federation.LocalMetadataItems
	(*GetLocalMetadataItemRequestResponse)(nil), // 10: federation.GetLocalMetadataItemRequestResponse
	(*Node)(nil),                                // 11: federation.Node
	(*GetFederationsResponseEntry)(nil),         // 12: federation.GetFederationsResponseEntry
	(*GetFederationsResponse)(nil),              // 13: federation.GetFederationsResponse
	(*PostFederationObjectsRequest)(nil),        // 14: federation.PostFederationObjectsRequest
	(*PostFederationObjectsResponseEntry)(nil),  // 15: federation.PostFederationObjectsResponseEntry
	(*PostFederationObjectsResponse)(nil),       // 16: federation.PostFederationObjectsResponse
	(*PostFederationStatusRequest)(nil),         // 17: federation.PostFederationStatusRequest
	(*PostFederationStatusResponseEntry)(nil),   // 18: federation.PostFederationStatusResponseEntry
	(*PostFederationStatusResponse)(nil),        // 19: federation.PostFederationStatusResponse
	(*StreamLocalFileRequestFilter)(nil),        // 20: federation.StreamLocalFileRequestFilter
	(*StreamLocalFileRequest)(nil),              // 21: federation.StreamLocalFileRequest
	(*ReportDefinition)(nil),                    // 22: federation.ReportDefinition
	(*StreamReportResultsRequest)(nil),          // 23: federation.StreamReportResultsRequest
	(*StreamDataFileResponse)(nil),              // 24: federation.StreamDataFileResponse
	(*ReplayRequest)(nil),                       // 25: federation.ReplayRequest
	(*ReplyStats)(nil),                          // 26: federation.ReplyStats
	nil,                                         // 27: federation.S3MetaDataDump.IntervalsEntry
	nil,                                         // 28: federation.StreamLocalFileRequest.ParamsEntry
	nil,                                         // 29: federation.StreamReportResultsRequest.ParamsEntry
	(*emptypb.Empty)(nil),                       // 30: google.protobuf.Empty
}
var file_api_proto_federation_proto_depIdxs = []int32{
	0,  // 0: federation.GetLocalMetadataItemRequest.metadataType:type_name -> federation.MetadataType
	0,  // 1: federation.LocalMetadataItem.metadataType:type_name -> federation.MetadataType
	5,  // 2: federation.GetRemoteMetadataRequest.queryRequest:type_name -> federation.QueryRequest
	27, // 3: federation.S3MetaDataDump.Intervals:type_name -> federation.S3MetaDataDump.IntervalsEntry
	0,  // 4: federation.S3MetaDataDump.metadataType:type_name -> federation.MetadataType
	4,  // 5: federation.LocalMetadataItems.items:type_name -> federation.LocalMetadataItem
	9,  // 6: federation.GetLocalMetadataItemRequestResponse.items:type_name -> federation.LocalMetadataItems
	11, // 7: federation.GetFederationsResponseEntry.nodes:type_name -> federation.Node
	12, // 8: federation.GetFederationsResponse.results:type_name -> federation.GetFederationsResponseEntry
	15, // 9: federation.PostFederationObjectsResponse.results:type_name -> federation.PostFederationObjectsResponseEntry
	18, // 10: federation.PostFederationStatusResponse.results:type_name -> federation.PostFederationStatusResponseEntry
	28, // 11: federation.StreamLocalFileRequest.params:type_name -> federation.StreamLocalFileRequest.ParamsEntry
	29, // 12: federation.StreamReportResultsRequest.params:type_name -> federation.StreamReportResultsRequest.ParamsEntry
	22, // 13: federation.StreamReportResultsRequest.rd:type_name -> federation.ReportDefinition
	9,  // 14: federation.S3MetaDataDump.IntervalsEntry.value:type_name -> federation.LocalMetadataItems
	20, // 15: federation.StreamLocalFileRequest.ParamsEntry.value:type_name -> federation.StreamLocalFileRequestFilter
	20, // 16: federation.StreamReportResultsRequest.ParamsEntry.value:type_name -> federation.StreamLocalFileRequestFilter
	30, // 17: federation.Federation.Ping:input_type -> google.protobuf.Empty
	3,  // 18: federation.Federation.GetLocalMetadataItems:input_type -> federation.GetLocalMetadataItemRequest
	6,  // 19: federation.Federation.StreamRemoteMetadataItems:input_type -> federation.GetRemoteMetadataRequest
	21, // 20: federation.Federation.StreamLocalFile:input_type -> federation.StreamLocalFileRequest
	23, // 21: federation.Federation.StreamReportResults:input_type -> federation.StreamReportResultsRequest
	30, // 22: federation.Federation.GetFederations:input_type -> google.protobuf.Empty
	14, // 23: federation.Federation.PostFederationObjects:input_type -> federation.PostFederationObjectsRequest
	17, // 24: federation.Federation.PostFederationStatus:input_type -> federation.PostFederationStatusRequest
	25, // 25: federation.Federation.Replay:input_type -> federation.ReplayRequest
	2,  // 26: federation.Federation.Ping:output_type -> federation.Pong
	10, // 27: federation.Federation.GetLocalMetadataItems:output_type -> federation.GetLocalMetadataItemRequestResponse
	7,  // 28: federation.Federation.StreamRemoteMetadataItems:output_type -> federation.StreamRemoteMetadataResponse
	24, // 29: federation.Federation.StreamLocalFile:output_type -> federation.StreamDataFileResponse
	24, // 30: federation.Federation.StreamReportResults:output_type -> federation.StreamDataFileResponse
	13, // 31: federation.Federation.GetFederations:output_type -> federation.GetFederationsResponse
	16, // 32: federation.Federation.PostFederationObjects:output_type -> federation.PostFederationObjectsResponse
	19, // 33: federation.Federation.PostFederationStatus:output_type -> federation.PostFederationStatusResponse
	26, // 34: federation.Federation.Replay:output_type -> federation.ReplyStats
	26, // [26:35] is the sub-list for method output_type
	17, // [17:26] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_proto_federation_proto_init() }
func file_api_proto_federation_proto_init() {
	if File_api_proto_federation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_federation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocalMetadataItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalMetadataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemoteMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRemoteMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3MetaDataDump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalMetadataItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocalMetadataItemRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFederationsResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFederationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationObjectsResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationStatusResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFederationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLocalFileRequestFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLocalFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReportResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDataFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_federation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_federation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_federation_proto_goTypes,
		DependencyIndexes: file_api_proto_federation_proto_depIdxs,
		EnumInfos:         file_api_proto_federation_proto_enumTypes,
		MessageInfos:      file_api_proto_federation_proto_msgTypes,
	}.Build()
	File_api_proto_federation_proto = out.File
	file_api_proto_federation_proto_rawDesc = nil
	file_api_proto_federation_proto_goTypes = nil
	file_api_proto_federation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FederationClient is the client API for Federation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FederationClient interface {
	Ping(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Pong, error)
	GetLocalMetadataItems(ctx context.Context, in *GetLocalMetadataItemRequest, opts ...grpc.CallOption) (*GetLocalMetadataItemRequestResponse, error)
	StreamRemoteMetadataItems(ctx context.Context, in *GetRemoteMetadataRequest, opts ...grpc.CallOption) (Federation_StreamRemoteMetadataItemsClient, error)
	StreamLocalFile(ctx context.Context, in *StreamLocalFileRequest, opts ...grpc.CallOption) (Federation_StreamLocalFileClient, error)
	StreamReportResults(ctx context.Context, in *StreamReportResultsRequest, opts ...grpc.CallOption) (Federation_StreamReportResultsClient, error)
	GetFederations(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetFederationsResponse, error)
	PostFederationObjects(ctx context.Context, in *PostFederationObjectsRequest, opts ...grpc.CallOption) (*PostFederationObjectsResponse, error)
	PostFederationStatus(ctx context.Context, in *PostFederationStatusRequest, opts ...grpc.CallOption) (*PostFederationStatusResponse, error)
	Replay(ctx context.Context, in *ReplayRequest, opts ...grpc.CallOption) (*ReplyStats, error)
}

type federationClient struct {
	cc grpc.ClientConnInterface
}

func NewFederationClient(cc grpc.ClientConnInterface) FederationClient {
	return &federationClient{cc}
}

func (c *federationClient) Ping(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/federation.Federation/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetLocalMetadataItems(ctx context.Context, in *GetLocalMetadataItemRequest, opts ...grpc.CallOption) (*GetLocalMetadataItemRequestResponse, error) {
	out := new(GetLocalMetadataItemRequestResponse)
	err := c.cc.Invoke(ctx, "/federation.Federation/GetLocalMetadataItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) StreamRemoteMetadataItems(ctx context.Context, in *GetRemoteMetadataRequest, opts ...grpc.CallOption) (Federation_StreamRemoteMetadataItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Federation_serviceDesc.Streams[0], "/federation.Federation/StreamRemoteMetadataItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &federationStreamRemoteMetadataItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Federation_StreamRemoteMetadataItemsClient interface {
	Recv() (*StreamRemoteMetadataResponse, error)
	grpc.ClientStream
}

type federationStreamRemoteMetadataItemsClient struct {
	grpc.ClientStream
}

func (x *federationStreamRemoteMetadataItemsClient) Recv() (*StreamRemoteMetadataResponse, error) {
	m := new(StreamRemoteMetadataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *federationClient) StreamLocalFile(ctx context.Context, in *StreamLocalFileRequest, opts ...grpc.CallOption) (Federation_StreamLocalFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Federation_serviceDesc.Streams[1], "/federation.Federation/StreamLocalFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &federationStreamLocalFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Federation_StreamLocalFileClient interface {
	Recv() (*StreamDataFileResponse, error)
	grpc.ClientStream
}

type federationStreamLocalFileClient struct {
	grpc.ClientStream
}

func (x *federationStreamLocalFileClient) Recv() (*StreamDataFileResponse, error) {
	m := new(StreamDataFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *federationClient) StreamReportResults(ctx context.Context, in *StreamReportResultsRequest, opts ...grpc.CallOption) (Federation_StreamReportResultsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Federation_serviceDesc.Streams[2], "/federation.Federation/StreamReportResults", opts...)
	if err != nil {
		return nil, err
	}
	x := &federationStreamReportResultsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Federation_StreamReportResultsClient interface {
	Recv() (*StreamDataFileResponse, error)
	grpc.ClientStream
}

type federationStreamReportResultsClient struct {
	grpc.ClientStream
}

func (x *federationStreamReportResultsClient) Recv() (*StreamDataFileResponse, error) {
	m := new(StreamDataFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *federationClient) GetFederations(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetFederationsResponse, error) {
	out := new(GetFederationsResponse)
	err := c.cc.Invoke(ctx, "/federation.Federation/GetFederations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) PostFederationObjects(ctx context.Context, in *PostFederationObjectsRequest, opts ...grpc.CallOption) (*PostFederationObjectsResponse, error) {
	out := new(PostFederationObjectsResponse)
	err := c.cc.Invoke(ctx, "/federation.Federation/PostFederationObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) PostFederationStatus(ctx context.Context, in *PostFederationStatusRequest, opts ...grpc.CallOption) (*PostFederationStatusResponse, error) {
	out := new(PostFederationStatusResponse)
	err := c.cc.Invoke(ctx, "/federation.Federation/PostFederationStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) Replay(ctx context.Context, in *ReplayRequest, opts ...grpc.CallOption) (*ReplyStats, error) {
	out := new(ReplyStats)
	err := c.cc.Invoke(ctx, "/federation.Federation/Replay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FederationServer is the server API for Federation service.
type FederationServer interface {
	Ping(context.Context, *emptypb.Empty) (*Pong, error)
	GetLocalMetadataItems(context.Context, *GetLocalMetadataItemRequest) (*GetLocalMetadataItemRequestResponse, error)
	StreamRemoteMetadataItems(*GetRemoteMetadataRequest, Federation_StreamRemoteMetadataItemsServer) error
	StreamLocalFile(*StreamLocalFileRequest, Federation_StreamLocalFileServer) error
	StreamReportResults(*StreamReportResultsRequest, Federation_StreamReportResultsServer) error
	GetFederations(context.Context, *emptypb.Empty) (*GetFederationsResponse, error)
	PostFederationObjects(context.Context, *PostFederationObjectsRequest) (*PostFederationObjectsResponse, error)
	PostFederationStatus(context.Context, *PostFederationStatusRequest) (*PostFederationStatusResponse, error)
	Replay(context.Context, *ReplayRequest) (*ReplyStats, error)
}

// UnimplementedFederationServer can be embedded to have forward compatible implementations.
type UnimplementedFederationServer struct {
}

func (*UnimplementedFederationServer) Ping(context.Context, *emptypb.Empty) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedFederationServer) GetLocalMetadataItems(context.Context, *GetLocalMetadataItemRequest) (*GetLocalMetadataItemRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocalMetadataItems not implemented")
}
func (*UnimplementedFederationServer) StreamRemoteMetadataItems(*GetRemoteMetadataRequest, Federation_StreamRemoteMetadataItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamRemoteMetadataItems not implemented")
}
func (*UnimplementedFederationServer) StreamLocalFile(*StreamLocalFileRequest, Federation_StreamLocalFileServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamLocalFile not implemented")
}
func (*UnimplementedFederationServer) StreamReportResults(*StreamReportResultsRequest, Federation_StreamReportResultsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamReportResults not implemented")
}
func (*UnimplementedFederationServer) GetFederations(context.Context, *emptypb.Empty) (*GetFederationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFederations not implemented")
}
func (*UnimplementedFederationServer) PostFederationObjects(context.Context, *PostFederationObjectsRequest) (*PostFederationObjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostFederationObjects not implemented")
}
func (*UnimplementedFederationServer) PostFederationStatus(context.Context, *PostFederationStatusRequest) (*PostFederationStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostFederationStatus not implemented")
}
func (*UnimplementedFederationServer) Replay(context.Context, *ReplayRequest) (*ReplyStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replay not implemented")
}

func RegisterFederationServer(s *grpc.Server, srv FederationServer) {
	s.RegisterService(&_Federation_serviceDesc, srv)
}

func _Federation_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).Ping(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetLocalMetadataItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocalMetadataItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetLocalMetadataItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/GetLocalMetadataItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetLocalMetadataItems(ctx, req.(*GetLocalMetadataItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_StreamRemoteMetadataItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRemoteMetadataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FederationServer).StreamRemoteMetadataItems(m, &federationStreamRemoteMetadataItemsServer{stream})
}

type Federation_StreamRemoteMetadataItemsServer interface {
	Send(*StreamRemoteMetadataResponse) error
	grpc.ServerStream
}

type federationStreamRemoteMetadataItemsServer struct {
	grpc.ServerStream
}

func (x *federationStreamRemoteMetadataItemsServer) Send(m *StreamRemoteMetadataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Federation_StreamLocalFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamLocalFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FederationServer).StreamLocalFile(m, &federationStreamLocalFileServer{stream})
}

type Federation_StreamLocalFileServer interface {
	Send(*StreamDataFileResponse) error
	grpc.ServerStream
}

type federationStreamLocalFileServer struct {
	grpc.ServerStream
}

func (x *federationStreamLocalFileServer) Send(m *StreamDataFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Federation_StreamReportResults_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamReportResultsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FederationServer).StreamReportResults(m, &federationStreamReportResultsServer{stream})
}

type Federation_StreamReportResultsServer interface {
	Send(*StreamDataFileResponse) error
	grpc.ServerStream
}

type federationStreamReportResultsServer struct {
	grpc.ServerStream
}

func (x *federationStreamReportResultsServer) Send(m *StreamDataFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Federation_GetFederations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetFederations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/GetFederations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetFederations(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_PostFederationObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostFederationObjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).PostFederationObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/PostFederationObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).PostFederationObjects(ctx, req.(*PostFederationObjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_PostFederationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostFederationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).PostFederationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/PostFederationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).PostFederationStatus(ctx, req.(*PostFederationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_Replay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).Replay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/federation.Federation/Replay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).Replay(ctx, req.(*ReplayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Federation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "federation.Federation",
	HandlerType: (*FederationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Federation_Ping_Handler,
		},
		{
			MethodName: "GetLocalMetadataItems",
			Handler:    _Federation_GetLocalMetadataItems_Handler,
		},
		{
			MethodName: "GetFederations",
			Handler:    _Federation_GetFederations_Handler,
		},
		{
			MethodName: "PostFederationObjects",
			Handler:    _Federation_PostFederationObjects_Handler,
		},
		{
			MethodName: "PostFederationStatus",
			Handler:    _Federation_PostFederationStatus_Handler,
		},
		{
			MethodName: "Replay",
			Handler:    _Federation_Replay_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamRemoteMetadataItems",
			Handler:       _Federation_StreamRemoteMetadataItems_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamLocalFile",
			Handler:       _Federation_StreamLocalFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamReportResults",
			Handler:       _Federation_StreamReportResults_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/proto/federation.proto",
}
