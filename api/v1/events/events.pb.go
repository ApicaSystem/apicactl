// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: api/proto/events.proto

package events

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SortOrderEnums int32

const (
	SortOrderEnums_UNKNOWN SortOrderEnums = 0
	SortOrderEnums_ASC     SortOrderEnums = 1
	SortOrderEnums_DESC    SortOrderEnums = 2
)

// Enum value maps for SortOrderEnums.
var (
	SortOrderEnums_name = map[int32]string{
		0: "UNKNOWN",
		1: "ASC",
		2: "DESC",
	}
	SortOrderEnums_value = map[string]int32{
		"UNKNOWN": 0,
		"ASC":     1,
		"DESC":    2,
	}
)

func (x SortOrderEnums) Enum() *SortOrderEnums {
	p := new(SortOrderEnums)
	*p = x
	return p
}

func (x SortOrderEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrderEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_events_proto_enumTypes[0].Descriptor()
}

func (SortOrderEnums) Type() protoreflect.EnumType {
	return &file_api_proto_events_proto_enumTypes[0]
}

func (x SortOrderEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrderEnums.Descriptor instead.
func (SortOrderEnums) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level  string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// Deprecated: Do not use.
	Timestamp    string            `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message      string            `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Extract      map[string]string `protobuf:"bytes,6,rep,name=extract,proto3" json:"extract,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Envirionment string            `protobuf:"bytes,7,opt,name=envirionment,proto3" json:"envirionment,omitempty"`
	TimestampInt int64             `protobuf:"varint,8,opt,name=timestamp_int,json=timestampInt,proto3" json:"timestamp_int,omitempty"`
	Hostname     string            `protobuf:"bytes,9,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AppName      string            `protobuf:"bytes,10,opt,name=appName,proto3" json:"appName,omitempty"`
	ProcId       string            `protobuf:"bytes,11,opt,name=procId,proto3" json:"procId,omitempty"`
	Namespace    string            `protobuf:"bytes,12,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Destination  string            `protobuf:"bytes,13,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Event) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

// Deprecated: Do not use.
func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetExtract() map[string]string {
	if x != nil {
		return x.Extract
	}
	return nil
}

func (x *Event) GetEnvirionment() string {
	if x != nil {
		return x.Envirionment
	}
	return ""
}

func (x *Event) GetTimestampInt() int64 {
	if x != nil {
		return x.TimestampInt
	}
	return 0
}

func (x *Event) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Event) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Event) GetProcId() string {
	if x != nil {
		return x.ProcId
	}
	return ""
}

func (x *Event) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Event) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type EventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset     int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count      int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalCount int64    `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Events     []*Event `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventsResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EventsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EventsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *EventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names          []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Search         string   `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Level          []string `protobuf:"bytes,3,rep,name=level,proto3" json:"level,omitempty"`
	TimestampStart string   `protobuf:"bytes,4,opt,name=timestamp_start,json=timestampStart,proto3" json:"timestamp_start,omitempty"`
	TimestampEnd   string   `protobuf:"bytes,5,opt,name=timestamp_end,json=timestampEnd,proto3" json:"timestamp_end,omitempty"`
	Hostname       []string `protobuf:"bytes,6,rep,name=hostname,proto3" json:"hostname,omitempty"`
	AppName        []string `protobuf:"bytes,7,rep,name=appName,proto3" json:"appName,omitempty"`
	ProcId         []string `protobuf:"bytes,8,rep,name=procId,proto3" json:"procId,omitempty"`
	Namespace      []string `protobuf:"bytes,9,rep,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *EventsFilter) Reset() {
	*x = EventsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsFilter) ProtoMessage() {}

func (x *EventsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsFilter.ProtoReflect.Descriptor instead.
func (*EventsFilter) Descriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventsFilter) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *EventsFilter) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *EventsFilter) GetLevel() []string {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *EventsFilter) GetTimestampStart() string {
	if x != nil {
		return x.TimestampStart
	}
	return ""
}

func (x *EventsFilter) GetTimestampEnd() string {
	if x != nil {
		return x.TimestampEnd
	}
	return ""
}

func (x *EventsFilter) GetHostname() []string {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *EventsFilter) GetAppName() []string {
	if x != nil {
		return x.AppName
	}
	return nil
}

func (x *EventsFilter) GetProcId() []string {
	if x != nil {
		return x.ProcId
	}
	return nil
}

func (x *EventsFilter) GetNamespace() []string {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type SortOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute string         `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Order     SortOrderEnums `protobuf:"varint,2,opt,name=order,proto3,enum=events.SortOrderEnums" json:"order,omitempty"`
}

func (x *SortOrder) Reset() {
	*x = SortOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOrder) ProtoMessage() {}

func (x *SortOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOrder.ProtoReflect.Descriptor instead.
func (*SortOrder) Descriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *SortOrder) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *SortOrder) GetOrder() SortOrderEnums {
	if x != nil {
		return x.Order
	}
	return SortOrderEnums_UNKNOWN
}

type EventsPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset         uint64        `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count          uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Filter         *EventsFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort           *SortOrder    `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	TimestampStart uint64        `protobuf:"varint,5,opt,name=timestamp_start,json=timestampStart,proto3" json:"timestamp_start,omitempty"`
	TimestampEnd   uint64        `protobuf:"varint,6,opt,name=timestamp_end,json=timestampEnd,proto3" json:"timestamp_end,omitempty"`
	Destination    string        `protobuf:"bytes,7,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *EventsPostRequest) Reset() {
	*x = EventsPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsPostRequest) ProtoMessage() {}

func (x *EventsPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsPostRequest.ProtoReflect.Descriptor instead.
func (*EventsPostRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventsPostRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EventsPostRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EventsPostRequest) GetFilter() *EventsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *EventsPostRequest) GetSort() *SortOrder {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *EventsPostRequest) GetTimestampStart() uint64 {
	if x != nil {
		return x.TimestampStart
	}
	return 0
}

func (x *EventsPostRequest) GetTimestampEnd() uint64 {
	if x != nil {
		return x.TimestampEnd
	}
	return 0
}

func (x *EventsPostRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

var File_api_proto_events_proto protoreflect.FileDescriptor

var file_api_proto_events_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x03, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x69, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x69, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x49, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x63, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86, 0x01,
	0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x86,
	0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x30, 0x0a, 0x0e, 0x53, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x32, 0x83, 0x01, 0x0a, 0x0d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x14, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x0a, 0x47, 0x65, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0xd6, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x6f, 0x67, 0x69, 0x71, 0x61, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x71, 0x63, 0x74, 0x6c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3b, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x92, 0x41, 0xa0, 0x01, 0x12, 0x0d, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52,
	0x19, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x17, 0x0a, 0x03, 0x34, 0x30,
	0x33, 0x12, 0x10, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x2e, 0x52, 0x33, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x2c, 0x0a, 0x2a, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f,
	0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_events_proto_rawDescOnce sync.Once
	file_api_proto_events_proto_rawDescData = file_api_proto_events_proto_rawDesc
)

func file_api_proto_events_proto_rawDescGZIP() []byte {
	file_api_proto_events_proto_rawDescOnce.Do(func() {
		file_api_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_events_proto_rawDescData)
	})
	return file_api_proto_events_proto_rawDescData
}

var file_api_proto_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_proto_events_proto_goTypes = []interface{}{
	(SortOrderEnums)(0),       // 0: events.SortOrderEnums
	(*Event)(nil),             // 1: events.Event
	(*EventsResponse)(nil),    // 2: events.EventsResponse
	(*EventsFilter)(nil),      // 3: events.EventsFilter
	(*SortOrder)(nil),         // 4: events.SortOrder
	(*EventsPostRequest)(nil), // 5: events.EventsPostRequest
	nil,                       // 6: events.Event.ExtractEntry
}
var file_api_proto_events_proto_depIdxs = []int32{
	6, // 0: events.Event.extract:type_name -> events.Event.ExtractEntry
	1, // 1: events.EventsResponse.events:type_name -> events.Event
	0, // 2: events.SortOrder.order:type_name -> events.SortOrderEnums
	3, // 3: events.EventsPostRequest.filter:type_name -> events.EventsFilter
	4, // 4: events.EventsPostRequest.sort:type_name -> events.SortOrder
	5, // 5: events.EventsService.GetEvents:input_type -> events.EventsPostRequest
	2, // 6: events.EventsService.GetEvents:output_type -> events.EventsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_events_proto_init() }
func file_api_proto_events_proto_init() {
	if File_api_proto_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_events_proto_goTypes,
		DependencyIndexes: file_api_proto_events_proto_depIdxs,
		EnumInfos:         file_api_proto_events_proto_enumTypes,
		MessageInfos:      file_api_proto_events_proto_msgTypes,
	}.Build()
	File_api_proto_events_proto = out.File
	file_api_proto_events_proto_rawDesc = nil
	file_api_proto_events_proto_goTypes = nil
	file_api_proto_events_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventsServiceClient is the client API for EventsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsServiceClient interface {
	GetEvents(ctx context.Context, in *EventsPostRequest, opts ...grpc.CallOption) (*EventsResponse, error)
}

type eventsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventsServiceClient(cc grpc.ClientConnInterface) EventsServiceClient {
	return &eventsServiceClient{cc}
}

func (c *eventsServiceClient) GetEvents(ctx context.Context, in *EventsPostRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/events.EventsService/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServiceServer is the server API for EventsService service.
type EventsServiceServer interface {
	GetEvents(context.Context, *EventsPostRequest) (*EventsResponse, error)
}

// UnimplementedEventsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventsServiceServer struct {
}

func (*UnimplementedEventsServiceServer) GetEvents(context.Context, *EventsPostRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}

func RegisterEventsServiceServer(s *grpc.Server, srv EventsServiceServer) {
	s.RegisterService(&_EventsService_serviceDesc, srv)
}

func _EventsService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventsService/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServiceServer).GetEvents(ctx, req.(*EventsPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.EventsService",
	HandlerType: (*EventsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvents",
			Handler:    _EventsService_GetEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/events.proto",
}
